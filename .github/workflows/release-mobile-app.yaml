name: Mobile fastlane release workflow
on:
  push:
    branches: [mobile-fastlane-ci-cd]
  workflow_dispatch:

jobs:
  release-android-mobile:
    name: release-android-mobile
    runs-on: macos-latest #orai-self-hosted
    strategy:
      matrix:
        node-version: [16.14.0]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # - uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Checkout submodule repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      # # Update references
      # - name: Git Submodule Update
      #   working-directory: packages/background
      #   run: |
      #     git checkout feat/link-gg
      - name: Install dependencies # install project deps with --frozen-lockfile to make sure we will have the same packages version ( very recommended  on running yarn install on ci)
        run: yarn install --frozen-lockfile
      - name: Install mobile packages
        working-directory: packages/mobile
        run: yarn --silent
      - name: restore lerna
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Build Libs
        run: yarn build:libs
      - name: Build provider
        working-directory: packages/mobile
        run: yarn build:provider
      - name: Setup Ruby 
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.10
          bundler-cache: true
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        working-directory: packages/mobile/android
        run: chmod +x gradlew
      - name: Setup Fastlane android
        working-directory: packages/mobile/android/fastlane
        run: cd .. && bundle update && fastlane beta
        env:
          JSON_KEY_DATA: ${{ secrets.GOOGLE_ACCOUNT_SERVICE }}
          DISCORD_HOOK_ID: ${{ secrets.DISCORD_MOBILE_WEBHOOK_ID }}
          DISCORD_HOOK_TOKEN: ${{ secrets.DISCORD_MOBILE_WEBHOOK_TOKEN }}
          ALIAS: ${{ secrets.ALIAS }}
          PASS_KEY_STORE: ${{ secrets.PASS_KEY_STORE }}
          PASS_ALIAS_KEY_STORE: ${{ secrets.PASS_KEY_STORE }}
          FILE_PATH: "/OWalletKeystore"
      - name: Send discord message
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_MOBILE_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_MOBILE_WEBHOOK_TOKEN }}
          username: "GitBot"
          message: Fastlane success! Comment=${{ github.event.head_commit.message }}
      - name: Send discord message
        if: ${{ failure() }}
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_MOBILE_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_MOBILE_WEBHOOK_TOKEN }}
          username: "GitBot"
          message: Fastlane fail ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
  release-ios-mobile:
    name: release-ios-mobile
    runs-on: macos-latest #orai-self-hosted
    strategy:
      matrix:
        node-version: [16.14.0]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # - uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Checkout submodule repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      # # Update references
      # - name: Git Submodule Update
      #   working-directory: packages/background
      #   run: |
      #     git checkout feat/link-gg
      - name: Install dependencies # install project deps with --frozen-lockfile to make sure we will have the same packages version ( very recommended  on running yarn install on ci)
        run: yarn install --frozen-lockfile
      - name: Install mobile packages
        working-directory: packages/mobile
        run: yarn --silent
      - name: restore lerna
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Build Libs
        run: yarn build:libs
      - name: Build provider
        working-directory: packages/mobile
        run: yarn build:provider
      - name: Setup Ruby 
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.10
          bundler-cache: true
      - uses: actions/cache@v1
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Pod install
        working-directory: packages/mobile
        run: yarn pod:install
      - name: Setup Fastlane ios
        working-directory: packages/mobile/ios/fastlane
        run: cd .. && bundle update && fastlane beta
        env:
          DISCORD_HOOK_ID: ${{ secrets.DISCORD_MOBILE_WEBHOOK_ID }}
          DISCORD_HOOK_TOKEN: ${{ secrets.DISCORD_MOBILE_WEBHOOK_TOKEN }}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
          APP_STORE_CONNECT_API_KEY_DURATION: 1200
          APP_STORE_CONNECT_API_KEY_IN_HOUSE: false
          APP_IDENTIFIER: io.orai.owallet
          APPLE_ID: ${{ secrets.APPLE_ID }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
      # - name: Send discord message
      #   uses: appleboy/discord-action@master
      #   with:
      #     webhook_id: ${{ secrets.DISCORD_MOBILE_WEBHOOK_ID }}
      #     webhook_token: ${{ secrets.DISCORD_MOBILE_WEBHOOK_TOKEN }}
      #     username: "GitBot"
      #     message: Fastlane success! Comment=${{ github.event.head_commit.message }}
      # - name: Send discord message
      #   if: ${{ failure() }}
      #   uses: appleboy/discord-action@master
      #   with:
      #     webhook_id: ${{ secrets.DISCORD_MOBILE_WEBHOOK_ID }}
      #     webhook_token: ${{ secrets.DISCORD_MOBILE_WEBHOOK_TOKEN }}
      #     username: "GitBot"
      #     message: Fastlane fail ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}